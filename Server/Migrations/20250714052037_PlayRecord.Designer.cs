// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.DB;

namespace Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250714052037_PlayRecord")]
    partial class PlayRecord
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Server.DB.AccountDb", b =>
                {
                    b.Property<int>("AccountDbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GoogleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("PlayerDbId")
                        .HasColumnType("int");

                    b.HasKey("AccountDbId");

                    b.HasIndex("GoogleId")
                        .IsUnique()
                        .HasFilter("[GoogleId] IS NOT NULL");

                    b.HasIndex("PlayerDbId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Server.DB.PlayerDb", b =>
                {
                    b.Property<int>("PlayerDbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlackDrawCount")
                        .HasColumnType("int");

                    b.Property<int>("BlackLoseCount")
                        .HasColumnType("int");

                    b.Property<int>("BlackPlayCount")
                        .HasColumnType("int");

                    b.Property<int>("BlackWinCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("TotalDrawCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalLoseCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalPlayCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalWinCount")
                        .HasColumnType("int");

                    b.Property<int>("WhiteDrawCount")
                        .HasColumnType("int");

                    b.Property<int>("WhiteLoseCount")
                        .HasColumnType("int");

                    b.Property<int>("WhitePlayCount")
                        .HasColumnType("int");

                    b.Property<int>("WhiteWinCount")
                        .HasColumnType("int");

                    b.HasKey("PlayerDbId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("Server.DB.AccountDb", b =>
                {
                    b.HasOne("Server.DB.PlayerDb", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerDbId");
                });
#pragma warning restore 612, 618
        }
    }
}
